//
// Generated file, do not edit! Created by nedtool 5.3 from InteractionData.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __INTERACTIONDATA_M_H
#define __INTERACTIONDATA_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0503
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>InteractionData.msg:1</tt> by nedtool.
 * <pre>
 * packet InteractionData
 * {
 *     string carId;
 *     string rsuId;
 *     string serviceName;
 *     double interactionTime;
 *     simtime_t latency;
 *     double RTT;
 * }
 * </pre>
 */
class InteractionData : public ::omnetpp::cPacket
{
  protected:
    ::omnetpp::opp_string carId;
    ::omnetpp::opp_string rsuId;
    ::omnetpp::opp_string serviceName;
    double interactionTime;
    ::omnetpp::simtime_t latency;
    double RTT;

  private:
    void copy(const InteractionData& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const InteractionData&);

  public:
    InteractionData(const char *name=nullptr, short kind=0);
    InteractionData(const InteractionData& other);
    virtual ~InteractionData();
    InteractionData& operator=(const InteractionData& other);
    virtual InteractionData *dup() const override {return new InteractionData(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getCarId() const;
    virtual void setCarId(const char * carId);
    virtual const char * getRsuId() const;
    virtual void setRsuId(const char * rsuId);
    virtual const char * getServiceName() const;
    virtual void setServiceName(const char * serviceName);
    virtual double getInteractionTime() const;
    virtual void setInteractionTime(double interactionTime);
    virtual ::omnetpp::simtime_t getLatency() const;
    virtual void setLatency(::omnetpp::simtime_t latency);
    virtual double getRTT() const;
    virtual void setRTT(double RTT);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const InteractionData& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, InteractionData& obj) {obj.parsimUnpack(b);}


#endif // ifndef __INTERACTIONDATA_M_H

