//
// Generated file, do not edit! Created by nedtool 5.3 from Service.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __SERVICE_M_H
#define __SERVICE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0503
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>Service.msg:1</tt> by nedtool.
 * <pre>
 * packet Service
 * {
 *     string serviceName;
 *     string serviceData;
 *     double startTime; // Start time of service availability
 *     double endTime;   // End time of service availability
 * }
 * </pre>
 */
class Service : public ::omnetpp::cPacket
{
  protected:
    ::omnetpp::opp_string serviceName;
    ::omnetpp::opp_string serviceData;
    double startTime;
    double endTime;

  private:
    void copy(const Service& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Service&);

  public:
    Service(const char *name=nullptr, short kind=0);
    Service(const Service& other);
    virtual ~Service();
    Service& operator=(const Service& other);
    virtual Service *dup() const override {return new Service(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getServiceName() const;
    virtual void setServiceName(const char * serviceName);
    virtual const char * getServiceData() const;
    virtual void setServiceData(const char * serviceData);
    virtual double getStartTime() const;
    virtual void setStartTime(double startTime);
    virtual double getEndTime() const;
    virtual void setEndTime(double endTime);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Service& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Service& obj) {obj.parsimUnpack(b);}


#endif // ifndef __SERVICE_M_H

